  # location / {    
  #   proxy_pass http://localhost:8080;
  #   proxy_redirect http://localhost:8080/ https://$host/;
  #   proxy_http_version 1.1;

  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection $connection_upgrade;
  #   proxy_read_timeout 20d;

  #   client_max_body_size 0;

  #   # ensuring secured login area. 
  #   auth_pam "Realm for secured info";
  #   auth_pam_service_name "login";
  # }

  location / {

     set $auth_cookie false;
     if ($http_cookie ~* "_A=([a-z0-9]+)(?:/|$)") {
       set $auth_cookie $1;
     }

     if ($auth_cookie = false) {
       # 307 is moved temporary
       return 307 /auth;
     }
     if ($auth_cookie = "") {
       return 307 /auth;
     }

     set $cookie_value "";
     if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})") {
       set $year $1;
       set $month $2;
       set $day $3;
       set $cookie_value "e4793c69c47e4ba6a${year}c${month}e${day}b";
     }


     if ($auth_cookie != $cookie_value) {
       # cookie is wrong / old, need to re authenticate
       return 307 /auth;
     }

     gzip off;

     proxy_pass http://localhost:8080;
     proxy_redirect http://localhost:8080/ https://$host/;
     proxy_http_version 1.1;

     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;
     proxy_read_timeout 20d;

     client_max_body_size 0;
     
   #   root /var/www/cgi-bin;
   #   fastcgi_pass unix:/var/run/fcgiwrap.socket;
   #   include /etc/nginx/fastcgi_params;
   #   fastcgi_param SCRIPT_FILENAME /var/www/cgi-bin/start-daemon;
   #   fastcgi_param REMOTE_USER $remote_user;
  }

  location /auth {
        auth_pam "Realm for secured info";
        auth_pam_service_name "login";

        # this must be placed in a seperated block, otherwise the auth_pam statement is not evaluated
        # https://askubuntu.com/questions/1366518/nginx-how-to-redirect-to-another-domain-while-using-password-authentication
        try_files _ @auth;
  }

  location @auth {
        #default cookie value
        set $cookie_value "";
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})") {
	        set $year $1;
	        set $month $2;
	        set $day $3;
	        set $cookie_value "e4793c69c47e4ba6a${year}c${month}e${day}b";
        }

        # Login was succesvol, add login cookie voor de volgende request
        add_header Set-Cookie "_A=$cookie_value;max-age=86400;path=/;Secure";
	
        # redirect back to root
	      return 307 /;
  }

  # test example:  http://localhost/example/hello